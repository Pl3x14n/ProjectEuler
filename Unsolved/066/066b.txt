DIM give_nth_element(100)

FOR d = 2 TO 1000
   IF SQR(d) <> INT(SQR(d)) THEN                                   ! Wenn d keine Quadratzahl ist, dann
      LET x = 0
      DO 
         LET x = x + 1
         IF x^2>d THEN 
            LET y = SQR((-x^2 + 1)/(-d))                          ! Auflösen in "x^2 - Dy^2 = 1" nach y
            IF y = INT(y) THEN 
               IF x^2 - d*y^2 = 1 THEN 
                  PRINT "MIN";d;" =  ";STR$(x);"^2 - ";STR$(d);"*";STR$(y);"^2"
                   
                  IF x > maxx  THEN 
                     LET maxx = x
                     LET maxd = d
                  END IF 
                   
                  EXIT DO 
               END IF 
            END IF   
             
         END IF 
         IF x > 250000 THEN 
            CALL kettenbruch(d) 
            EXIT DO
         END IF  
      LOOP 
       
   END IF 
    
NEXT d
PRINT "------------------------"
PRINT maxd;"  (";STR$(maxx);")"


SUB kettenbruch(x)
   local e,kbz$,i,n$,j,answer,no_repeat_part
    
   LET kbz$ = kb_zerlegung$(SQR(x),1)
    
   DO UNTIL kbz$(i:i) = " "
      LET i = i + 1
      LET n$ = n$ & kbz$(i:i)
   LOOP 
   LET no_repeat_part = VAL(n$)
    
    
   FOR j = i+1 TO LEN(kbz$)
      IF kbz$(j:j) = " " THEN
         LET e = e + 1
         LET give_nth_element(e) = VAL(e$)
         LET e$ = ""
      ELSE
         LET e$ = e$ & kbz$(j:j)
      END IF 
   NEXT j
   LET give_nth_element(e+1) = VAL(e$)
    
   
   FOR fraction_n = 1 TO 100   
      LET kettenbruch = sum_continued_fractions(fraction_n)
      INPUT g
   NEXT fraction_n
   
END SUB                                                 
 
 
FUNCTION kb_zerlegung$(a,b)
   local z,n,s,a$,r
   LET z = a
   LET n = b
   DO UNTIL s = 15
      LET s = s + 1
      LET r = MOD(z,n)
      LET a$ = a$ & " " & STR$((z-r)/n) 
      IF r = 0 THEN EXIT DO 
       
      LET z = n
      LET n = r
   LOOP  
   LET kb_zerlegung$ = a$(2 : LEN(a$))
END FUNCTION 




FUNCTION sum_continued_fractions(n)
   LOCAL sum, index
    
   IF n > 1 THEN
      LET sum = 1/give_nth_element(n-1)
       
      FOR index = n-2 TO 1 STEP -1
         LET sum = 1/(sum + give_nth_element(index))
      NEXT index
   ELSE
      LET sum = 0
   END IF
    
   LET sum_continued_fractions = no_repeat_part + sum
END FUNCTION



END
